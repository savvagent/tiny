{
  "version": 3,
  "sources": ["../../src/Path.js", "../../src/Query.js", "../../../tiny-utils/src/isBrowser.js", "../../../tiny-utils/src/clipboard.js", "../../../tiny-utils/src/atSize.js", "../../../tiny-utils/src/clickOutside.js", "../../../tiny-utils/src/copy.js", "../../../tiny-utils/src/dateReviver.js", "../../../tiny-utils/src/isJson.js", "../../../tiny-utils/src/deserialize.js", "../../../tiny-utils/src/serialize.js", "../../../tiny-utils/src/digest.js", "../../../tiny-utils/src/getPWADisplayMode.js", "../../../tiny-utils/src/noop.js", "../../../tiny-utils/src/portal.js", "../../../tiny-utils/src/sessionStore.js", "../../../tiny-utils/src/StringBuilder.js", "../../../tiny-utils/src/uuid.js", "../../../tiny-utils/src/deepEquals.js", "../../../tiny-utils/src/getCookie.js", "../../../tiny-utils/src/isArray.js", "../../../tiny-utils/src/emailValidator.js", "../../../tiny-utils/src/empty.js", "../../../tiny-utils/src/isObject.js", "../../../tiny-utils/src/isString.js", "../../../tiny-utils/src/locale.js", "../../src/TinyUri.js"],
  "sourcesContent": ["/**\n * Class to manage URL paths\n */\nexport default class Path {\n  /**\n   * @param {string} f - string path\n   * @param {object} ctx - context of Uri class\n   */\n  constructor(f, ctx = {}) {\n    this.ctx = ctx;\n    this._path = [];\n    return this.parse(f);\n  }\n\n  /**\n   * Append to a path\n   * @param {string} s path to append\n   * @return {instance} for chaining\n   */\n  append(s) {\n    this._path.push(s);\n    return this.ctx;\n  }\n\n  /**\n   * Delete end of path\n   * @param {integer} loc - segment of path to delete\n   * @return {instance} for chaining\n   */\n  delete(loc) {\n    if (Array.isArray(loc)) {\n      loc.reverse().forEach(l => this._path.splice(l, 1));\n    } else if (Number.isInteger(loc)) {\n      this._path.splice(loc, 1);\n    } else {\n      this._path.pop();\n    }\n    return this.ctx;\n  }\n\n  /**\n   * Get the path\n   * @return {array} path as array\n   */\n  get() {\n    return this._path;\n  }\n\n  /**\n   * Parse the path part of a URl\n   * @param {string} f - string path\n   * @return {instance} for chaining\n   */\n  parse(f = '') {\n    let path = decodeURIComponent(f);\n    let split = path.split('/');\n    if (Array.isArray(split)) {\n      if(path.match(/^\\//)) split.shift();\n      if (split[0] === '') split.shift();\n      if (split.length > 1 && path.match(/\\/$/)) split.pop();\n      this._path = split;\n    }\n    return this;\n  }\n\n  /**\n   * Replace part of a path\n   * @param {string} f - path replacement\n   * @param {integer} loc - location to replace\n   * @return {instance} for chaining\n   */\n  replace(f, loc) {\n    if (loc === 'file') {\n      this._path.splice(this._path.length - 1, 1, f);\n      return this.ctx;\n    } else if (Number.isInteger(loc)) {\n      this._path.splice(loc, 1, f);\n      return this.ctx;\n    }\n    this.parse(f);\n    return this.ctx;\n  }\n\n  /**\n   * Get string representatio of the path or the uri\n   * @param {boolen} uri - if true return string represention of uri\n   * @return {string} path or uri as string\n   */\n  toString(uri) {\n    if (uri) return this.ctx.toString();\n    return Array.isArray(this._path) ? this._path.join('/') : '';\n  }\n}\n", "/**\n * Class to manage query part of URL\n */\nexport default class Query {\n  /**\n   * @param {string} f - query string\n   * @param {object} ctx - context of uri instance\n   * @return {instance} for chaining\n   */\n  constructor (f, ctx = {}) {\n    Object.assign(this, ctx)\n    this.ctx = ctx\n    this.set(f)\n    return this\n  }\n\n  /**\n   * Add a query string\n   * @param {object} obj {name: 'value'}\n   * @return {instance} for chaining\n   */\n  add (obj = {}) {\n    this._query = this._convert(obj, this._query[0], this._query[1])\n    return this.ctx\n  }\n\n  /**\n   * Remove the query string\n   * @return {instance} for chaining\n   */\n  clear () {\n    this._query = [[], []]\n    return this.ctx\n  }\n\n  _convert (obj, p = [], q = []) {\n    for (const key in obj) {\n      if (Array.isArray(obj[key])) {\n        for (let i = 0; i < obj[key].length; i++) {\n          const val = obj[key][i]\n          p.push(key)\n          q.push(val)\n        }\n      } else if (obj[key]) {\n        p.push(key)\n        q.push(obj[key])\n      }\n    }\n    return [p, q]\n  }\n\n  /**\n   * Get the query string or get the value of a single query parameter\n   * @param {string} name representing single query string\n   * @returns {array} or {string} representing the query string the value of a single query parameter\n   */\n  get (name) {\n    const dict = {}\n    const obj = this._query\n\n    for (let i = 0; i < obj[0].length; i++) {\n      const k = obj[0][i]\n      const v = obj[1][i]\n      if (dict[k]) {\n        dict[k].push(v)\n      } else {\n        dict[k] = [v]\n      }\n    }\n    if (name) return dict[name] && dict[name].length ? dict[name][0] : null\n    return dict\n  }\n\n  getUrlTemplateQuery () {\n    return this._urlTemplateQueryString\n  }\n\n  /**\n   * Merge with the query string - replaces query string values if they exist\n   * @param {object} obj {name: 'value'}\n   * @return {instance} for chaining\n   */\n  merge (obj) {\n    const p = this._query[0]\n    const q = this._query[1]\n    for (const key in obj) {\n      let kset = false\n\n      for (let i = 0; i < p.length; i++) {\n        const xKey = p[i]\n        if (key === xKey) {\n          if (kset) {\n            p.splice(i, 1)\n            q.splice(i, 1)\n            continue\n          }\n          if (Array.isArray(obj[key])) {\n            q[i] = obj[key].shift()\n          } else if (typeof obj[key] === 'undefined' || obj[key] === null) {\n            p.splice(i, 1)\n            q.splice(i, 1)\n            delete obj[key]\n          } else {\n            q[i] = obj[key]\n            delete obj[key]\n          }\n          kset = true\n        }\n      }\n    }\n    this._query = this._convert(obj, this._query[0], this._query[1])\n    return this.ctx\n  }\n\n  _parse (q = '') {\n    const struct = [[], []]\n    const pairs = q.split(/&|;/)\n\n    for (let j = 0; j < pairs.length; j++) {\n      const pair = pairs[j]; const nPair = pair.match(this.qRegEx)\n\n      if (nPair && typeof nPair[nPair.length - 1] !== 'undefined') {\n        nPair.shift()\n        for (let i = 0; i < nPair.length; i++) {\n          const p = nPair[i]\n          struct[i].push(decodeURIComponent(p.replace('+', ' ', 'g')))\n        }\n      }\n    }\n    return struct\n  }\n\n  /**\n   * Set with the query string - replaces existing query string\n   * @param {obj} or {string} ...q\n   * @return {instance} for chaining\n   */\n  set (...q) {\n    const args = [...q]\n\n    if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        this._query = this._convert(args[0])\n      } else {\n        this._query = this._parse(args[0])\n      }\n    } else if (args.length === 0) {\n      this.clear()\n    } else {\n      const obj = {}\n      obj[args[0]] = args[1]\n      this.merge(obj)\n    }\n    return this.ctx\n  }\n\n  /**\n   * Set the url template query string vale\n   * @param {string} s url-template query string\n   * @return {instance} for chaining\n   */\n  setUrlTemplateQuery (s) {\n    this._urlTemplateQueryString = s\n  }\n\n  /**\n   * Get string representation of the path or the uri\n   * @param {boolean} uri - if true return string representation of uri\n   * @return {string} query or uri as string\n   */\n  toString (uri) {\n    if (uri) return this.ctx.toString()\n    const pairs = []\n    const n = this._query[0]\n    const v = this._query[1]\n\n    for (let i = 0; i < n.length; i++) {\n      pairs.push(encodeURIComponent(n[i]) + '=' + encodeURIComponent(v[i]))\n    }\n    return pairs.join('&')\n  }\n}\n", "const isBrowser = typeof window !== 'undefined'\n\nexport default isBrowser\n", "import isBrowser from './isBrowser'\n\nexport function clipboard(node, { trigger = 'click', text = '' } = {}) {\n  const handle = async () => {\n    if (isBrowser && typeof navigator !== 'undefined') {\n      await navigator.clipboard.writeText(text).then(\n        () => node.dispatchEvent(new CustomEvent('copied', { detail: { clipboard: text } })),\n        (e) => node.dispatchEvent(new CustomEvent('error', { detail: { error: e } }))\n      )\n    }\n  }\n\n  if (isBrowser) {\n    node.addEventListener(trigger, handle, true)\n  }\n\n  return {\n    update: (params) => {\n      if (params.trigger !== undefined) trigger = params.trigger\n\n      if (params.text !== undefined) text = params.text\n    },\n    destroy() {\n      node.removeEventListener(trigger, handle, true)\n    },\n  }\n}\n", "export default (bp, { default: defaultValue, xxs, xs, sm, md, lg, xl, xxl }) => {\n  let retVal\n  switch (bp) {\n    case 'xxl':\n      retVal = xxl ?? xl ?? lg ?? md ?? sm ?? xs ?? xxs ?? defaultValue\n      break\n    case 'xl':\n      retVal = xl ?? lg ?? md ?? sm ?? xs ?? xxs ?? defaultValue\n      break\n    case 'lg':\n      retVal = lg ?? md ?? sm ?? xs ?? xxs ?? defaultValue\n      break\n    case 'md':\n      retVal = md ?? sm ?? xs ?? xxs ?? defaultValue\n      break\n    case 'sm':\n      retVal = sm ?? xs ?? xxs ?? defaultValue\n      break\n    case 'xs':\n      retVal = xs ?? xxs ?? defaultValue\n      break\n    case 'xxs':\n      retVal = xxs ?? defaultValue\n      break\n    default:\n      retVal = defaultValue\n      break\n  }\n  return retVal\n}\n\n", "/** Dispatch event on click outside of node */\nexport default function clickOutside(node) {\n  const handleClick = (event) => {\n    if (node && !node.contains(event.target) && !event.defaultPrevented) {\n      node.dispatchEvent(\n        new CustomEvent('click_outside', node),\n      );\n    }\n  };\n\n  document.addEventListener('click', handleClick, true);\n\n  return {\n    destroy() {\n      document.removeEventListener('click', handleClick, true);\n    },\n  };\n}\n", "const copy = (thing) => typeof thing === 'object' ? JSON.parse(JSON.stringify(thing)) : thing\n\nexport default copy", "const isSerializedDate = (value) => {\n  const datePattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/\n  return (typeof value === 'string' && datePattern.test(value))\n}\n\nexport default function dateReviver (key, value) {\n  if (isSerializedDate(value)) {\n    return (new Date(value))\n  }\n  if (isSerializedDate(key)) {\n    return (new Date(key))\n  }\n  return (value)\n}\n", "export default function isJson(str) {\n  try {\n    JSON.parse(str);\n    return true\n  } catch (e) {\n    return false;\n  }\n}\n", "import isJson from './isJson'\nimport dateReviver from './dateReviver'\n\nconst deserialize = (str) => {\n  if (isJson(str)) {\n    return JSON.parse(str, dateReviver)\n  }\n  return str\n}\n\nexport default deserialize\n", "const serialize = (obj) => JSON.stringify(obj)\n\nexport default serialize\n", "import serialize from './serialize'\n\nexport default async function digest(message) {\n  return serialize(message)\n}\n", "import isBrowser from './isBrowser'\n\nexport default function getPWADisplayMode() {\n  if (isBrowser) {\n    const isStandalone = typeof window !== 'undefined' && window.matchMedia('(display-mode: standalone)').matches\n    if (document.referrer.startsWith('android-app://')) {\n      return 'twa'\n    } else if (navigator.standalone || isStandalone) {\n      return 'standalone'\n    }\n    return 'browser'\n  }\n}\n", "const noop = () => {}\n\nexport default noop", "import isBrowser from './isBrowser'\n\nconst portal = (node) => {\n  if (isBrowser) {\n    document.body.appendChild(node)\n  }\n}\n\nexport default portal\n", "import isBrowser from './isBrowser'\nimport deserialize from './deserialize'\nimport serialize from './serialize'\n\nclass MemoryStore {\n  constructor() {\n    this.db = new Map()\n  }\n\n  clear() {\n    return this.db.clear()\n  }\n\n  del(path) {\n    return this.db.delete(path)\n  }\n\n  get(path) {\n    return this.db.get(path)\n  }\n\n  put(path, value) {\n    return this.set(path, value)\n  }\n\n  set(path, value) {\n    return this.db.set(path, value)\n  }\n}\n\nclass BlockingStorage {\n  constructor() {\n    if (window.matchMedia('(display-mode: standalone)').matches) {\n      this.store = window.localStorage\n    } else {\n      this.store = window.sessionStorage\n    }\n  }\n\n  clear() {\n    return this.store.clear()\n  }\n\n  del(key) {\n    return this.store.removeItem(key)\n  }\n\n  get(key) {\n    if (isBrowser) return deserialize(this.store.getItem(key))\n  }\n\n  put(key, data) {\n    return this.store.setItem(key, serialize({ ...this.get(key), ...data }))\n  }\n\n  set(key, data) {\n    return this.store.setItem(key, serialize(data))\n  }\n}\n\nexport default isBrowser ? new BlockingStorage() : new MemoryStore()\n", "export default class StringBuilder {\n  constructor(string) {\n    if (!string || typeof string === 'undefined') this.string = String('')\n    else this.string = String(string)\n  }\n  toString() {\n    return this.string\n  }\n  append(val) {\n    this.string += val\n    return this\n  }\n  insert(pos, val) {\n    const length = this.string.length\n    const left = this.string.slice(0, pos)\n    const right = this.string.slice(pos)\n    this.string = left + val + right\n    return this\n  }\n}\n", "/**\n * Generates an RFC compliant uuid\n * @return {String} Uuid\n */\nexport default function uuid() {\n  let d = new Date().getTime();\n  const uid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n  return uid;\n}\n", "const deepEquals = (a, b) => {\n  if (a === b) return true\n\n  const arrA = Array.isArray(a)\n  const arrB = Array.isArray(b)\n  let i\n\n  if (arrA && arrB) {\n    if (a.length !== b.length) return false\n    for (i = 0; i < a.length; i++) if (!deepEquals(a[i], b[i])) return false\n    return true\n  }\n\n  if (arrA !== arrB) return false\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const keys = Object.keys(a)\n    if (keys.length !== Object.keys(b).length) return false\n\n    const dateA = a instanceof Date\n    const dateB = b instanceof Date\n    if (dateA && dateB) return a.getTime() === b.getTime()\n    if (dateA !== dateB) return false\n\n    const regexpA = a instanceof RegExp\n    const regexpB = b instanceof RegExp\n    if (regexpA && regexpB) return a.toString() === b.toString()\n    if (regexpA !== regexpB) return false\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n\n    for (i = 0; i < keys.length; i++) if (!deepEquals(a[keys[i]], b[keys[i]])) return false\n\n    return true\n  }\n\n  return false\n}\n\nexport const equal = deepEquals\n\nexport const notEqual = (a, b) => !equal(a, b)\n", "function parseCookies(headers) {\n  const cookieHeader = headers?.cookie\n  let rx = /([^;=\\s]*)=([^;]*)/g\n  let obj = {}\n  for (let m; (m = rx.exec(cookieHeader)); ) obj[m[1]] = decodeURIComponent(m[2])\n  return obj\n}\n\nexport function getCookie(name, headers) {\n  if (typeof document !== 'undefined') {\n    const re = new RegExp('(?:^|;)\\\\s?' + name + '=(.*?)(?:;|$)', 'i')\n    const match = document.cookie.match(re)\n    if (match && match[1]) return match[1]\n    return ''\n  }\n  const cookies = parseCookies(headers)\n  return cookies?.[name]\n}\n", "export function isArray(candidate) {\n  return Array.isArray(candidate);\n}\n", "export const isEmailValid = (email) => (/\\S+@\\S+\\.\\S+/i).test(email);\n\nexport const isEmailInvalid = (email) => !isEmailValid(email);", "export function isEmpty (value) {\n  let empty = false\n  if (value === null || value === undefined) empty = true\n  else if (typeof value === 'string' && value === '') empty = true\n  else if (value instanceof Date) empty = false\n  else if ((Array.isArray(value) || typeof value === 'string') && value.length < 1) empty = true\n  else if (typeof value === 'string' && !(/\\S/.test(value))) empty = true\n  else if (typeof value === 'object' && Object.keys(value).length < 1) empty = true\n  else if (typeof value === 'number' && value === 0) empty = true\n  return empty\n}\n\nexport function isNotEmpty (value) {\n  return !isEmpty(value)\n}\n", "export const isObject = (obj) => typeof obj === 'object' && !Array.isArray(obj)\n", "export const isString = (string) => typeof string === 'string'\n", "import isBrowser from './isBrowser'\n\nexport const userLocale =\n  isBrowser && typeof navigator !== 'undefined' && navigator.languages && navigator.languages.length\n    ? navigator.languages[0]\n    : 'en'\n\nexport const simpleLocale = userLocale.replace(/-.*/, '')\n\n", "import Path from './Path.js';\nimport Query from './Query.js';\nimport { StringBuilder } from '@savvagent/tiny-utils'\n\n/**\n * Uri - manipulate URLs\n */\nexport default class TinyUri {\n  /**\n   * @param {string} uri - a URI string\n   * @return {instance} - return Uri instance for chaining\n   */\n  constructor(uri) {\n    this.uriRegEx = /^(([^:/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n    this.authRegEx = /^([^@]+)@/;\n    this.portRegEx = /:(\\d+)$/;\n    this.qRegEx = /^([^=]+)(?:=(.*))?$/;\n    this.urlTempQueryRegEx = /\\{\\?(.*?)\\}/;\n    return this.parse(uri);\n  }\n\n  /**\n   * @param {string} authority - username password part of URL\n   * @return {instance} - returns Uri instance for chaining\n   */\n  authority(authority = '') {\n    if (authority !== '') {\n      let auth = authority.match(this.authRegEx);\n      this._authority = authority;\n      if (auth) {\n        authority = authority.replace(this.authRegEx, '');\n        this.userInfo(auth[1]);\n      }\n      let port = authority.match(this.portRegEx);\n      if(port) {\n        authority = authority.replace(this.portRegEx, '');\n        this.port(port[1]);\n      }\n      this.host(authority.replace('{', ''));\n      return this;\n    }\n    let userinfo = this.userInfo();\n    if (userinfo) authority = userinfo + '@';\n    authority = authority + this.host();\n    let port = this.port();\n    if (port) authority = authority + (':' + port);\n    return authority;\n  }\n\n  /**\n   * @param {string} f - string representation of fragment\n   * @return {instance} - returns Uri instance for chaining\n   */\n  fragment(f = '') {\n    return this.gs(f, '_fragment');\n  }\n\n  gs(val, tar, fn) {\n    if (typeof val !== 'undefined') {\n      this[tar] = val;\n      return this;\n    }\n    return fn ? fn(this[tar]) : this[tar] ? this[tar] : '';\n  }\n\n  /**\n   * @param {string} f - string representation of host\n   * @return {instance} - returns Uri instance for chaining\n   */\n  host(f) {\n    return this.gs(f, '_host');\n  }\n\n  /**\n   * @param {string} uri - URL\n   * @return {instance} - returns Uri instance for chaining\n   */\n  parse(uri) {\n    let f = uri ? uri.match(this.uriRegEx) : [];\n    let t = uri ? uri.match(this.urlTempQueryRegEx) : [];\n    this.scheme(f[2]);\n    this.authority(f[4]);\n    this.path = new Path(f[5] ? f[5].replace(/{$/, '') : '', this);\n    this.fragment(f[9]);\n    this.query = new Query(f[7] ? f[7] : '', this);\n    if (t) this.query.setUrlTemplateQuery(t[1]);\n    return this;\n  }\n\n  /**\n   * @param {string} f - port part of URL\n   * @return {instance} - returns Uri instance for chaining\n   */\n  port(f) {\n    return this.gs(f, '_port');\n  }\n\n  /**\n   * @param {string} f - protocol part of URL\n   * @return {instance} - returns Uri instance for chaining\n   */\n  protocol(f) {\n    return (this._scheme || '').toLowerCase();\n  }\n\n  /**\n   * @param {string} f - protocol scheme\n   * @return {instance} - returns Uri instance for chaining\n   */\n  scheme(f) {\n    return this.gs(f, '_scheme');\n  }\n\n  /**\n   * @param {string} f - user info part of URL\n   * @return {instance} - returns Uri instance for chaining\n   */\n  userInfo(f) {\n    return this.gs(f, '_userinfo', (r) => {\n      return r ? encodeURI(r) : r;\n    });\n  }\n\n  /**\n   * @return {string} - returns string URL\n   */\n  toString() {\n    let q = this.query.toString();\n    let p = this.path.toString();\n    let f = this.fragment();\n    let s = this.scheme();\n    let str = new StringBuilder();\n    let retStr = str.append(s ? s + '://' : \"\")\n      .append(this.authority())\n      .append('/').append(p)\n      .append(q !== '' ? '?' : '')\n      .append(q)\n      .toString()\n      .replace('/?', '?')\n      .replace(/\\/$/, '');\n    return retStr;\n  }\n\n  static clone(uri) {\n    return new TinyUri(uri.toString());\n  }\n\n}\n"],
  "mappings": "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",
  "names": ["Path", "f", "ctx", "s", "loc", "l", "path", "split", "uri", "Query", "f", "ctx", "obj", "p", "q", "key", "i", "val", "name", "dict", "k", "v", "kset", "xKey", "struct", "pairs", "j", "nPair", "args", "s", "uri", "n", "isBrowser", "isBrowser_default", "isSerializedDate", "value", "dateReviver", "key", "isJson", "str", "deserialize", "deserialize_default", "serialize", "obj", "serialize_default", "MemoryStore", "path", "value", "BlockingStorage", "key", "isBrowser_default", "deserialize_default", "data", "serialize_default", "sessionStore_default", "StringBuilder", "string", "val", "pos", "length", "left", "right", "userLocale", "isBrowser_default", "simpleLocale", "TinyUri", "_TinyUri", "uri", "authority", "auth", "port", "userinfo", "f", "val", "tar", "fn", "t", "Path", "Query", "r", "q", "p", "s", "x"]
}
