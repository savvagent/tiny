{
  "version": 3,
  "sources": ["../../../src/interceptors/lrucache.js"],
  "sourcesContent": ["const cache = new Map()\n\nconst ttl = 1000 * 60 * 10 // 10 minutes\n\nconst jsonRequest = { id: 'TINY_FETCH_LRUCACHE' }\n\njsonRequest.mapKey = null\n\njsonRequest.request = (request) => {\n  if (request.cache) {\n    const { headers, url } = request\n    const headerValues = [...headers.values()]\n    const headerString = headerValues.join('')\n    jsonRequest.mapKey = JSON.stringify({\n      url,\n      method: request.method,\n      headerString,\n    })\n  }\n  return request\n}\n\njsonRequest.response = (response) => {\n  if (jsonRequest.mapKey) {\n    if (cache.has(jsonRequest.mapKey)) return cache.get(jsonRequest.mapKey)\n    cache.set(jsonRequest.mapKey, response.clone())\n    setTimeout(() => {\n      cache.delete(jsonRequest.mapKey)\n    }, ttl)\n  }\n  return response\n}\n\nexport default jsonRequest\n"],
  "mappings": "AAAA,IAAMA,EAAQ,IAAI,IAEZC,EAAM,IAAO,GAAK,GAElBC,EAAc,CAAE,GAAI,qBAAsB,EAEhDA,EAAY,OAAS,KAErBA,EAAY,QAAWC,GAAY,CACjC,GAAIA,EAAQ,MAAO,CACjB,GAAM,CAAE,QAAAC,EAAS,IAAAC,CAAI,EAAIF,EAEnBG,EADe,CAAC,GAAGF,EAAQ,OAAO,CAAC,EACP,KAAK,EAAE,EACzCF,EAAY,OAAS,KAAK,UAAU,CAClC,IAAAG,EACA,OAAQF,EAAQ,OAChB,aAAAG,CACF,CAAC,CACH,CACA,OAAOH,CACT,EAEAD,EAAY,SAAYK,GAAa,CACnC,GAAIL,EAAY,OAAQ,CACtB,GAAIF,EAAM,IAAIE,EAAY,MAAM,EAAG,OAAOF,EAAM,IAAIE,EAAY,MAAM,EACtEF,EAAM,IAAIE,EAAY,OAAQK,EAAS,MAAM,CAAC,EAC9C,WAAW,IAAM,CACfP,EAAM,OAAOE,EAAY,MAAM,CACjC,EAAGD,CAAG,CACR,CACA,OAAOM,CACT,EAEA,IAAOC,EAAQN",
  "names": ["cache", "ttl", "jsonRequest", "request", "headers", "url", "headerString", "response", "lrucache_default"]
}
